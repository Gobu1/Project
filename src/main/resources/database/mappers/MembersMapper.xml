<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace의 값은 사용할 DAO의 풀 패키지명 -->
<mapper namespace="com.iu.home.member.MemberDAO">
	<!-- id == DAO.method name -->
	<select id="getLogin" parameterType="MemberDTO"
		resultMap="getLoginResult">
		select *
		from
		promembers m
		LEFT join <!-- userclass 자동부여 만들고 inner -->
		userclass uc
		on m.userID = uc.userID
		LEFT join <!-- class 자동부여 만들고 inner -->
		class c
		on
		uc.classnum = c.classnum
		where m.userID = #{userID} and
		m.pwd =
		#{pwd}
	</select>

	<resultMap type="MemberDTO" id="getLoginResult">
		<id column="userID" property="userID" />
		<result column="USERName" property="userName" />
		<collection property="classDTOs" javaType="List"
			ofType="ClassDTO">
			<id column="classnum" property="classNum" />
			<result column="classname" property="className" />
		</collection>
	</resultMap>

	<insert id="setJoin" parameterType="MemberDTO">
		insert all into promembers
		values
		(#{userID}, #{userName}, #{pwd},
		#{email},
		#{age}, #{birth},
		#{phone}, #{gender})
		into userclass
		values(class_seq.nextval, #{userID},
		6)
		select * from dual
	</insert>

	<select id="getMyPage" parameterType="MemberDTO"
		resultMap="getMyPageResult">
		select m.*, c.className, c.classNum
		from
		promembers m
		LEFT join
		userclass uc
		on m.userID = uc.userID
		LEFT join
		class c on
		uc.classnum =
		c.classnum
		where m.userID = #{userID}
	</select>
	<resultMap type="MemberDTO" id="getMyPageResult">
		<id column="userID" property="userID" />
		<result column="USERName" property="userName" />
		<result column="pwd" property="pwd" />
		<result column="EMAIL" property="email" />
		<result column="age" property="age" />
		<result column="birth" property="birth" />
		<result column="phone" property="phone" />
		<result column="gender" property="gender" />
		<collection property="classDTOs" javaType="List"
			ofType="ClassDTO">
			<id column="classnum" property="classNum" />
			<result column="classname" property="className" />
		</collection>
	</resultMap>


	<select id="adMyPage" parameterType="MemberDTO"
		resultMap="aMyPage"> <!-- resultMap="aMyPage" -->
		select * from
		promembers order by userID asc
	</select>

	<resultMap type="MemberDTO" id="aMyPage">
		<id column="userID" property="userID" />
		<result column="USERName" property="userName" />
		<result column="pwd" property="pwd" />
		<result column="email" property="email" />
		<result column="age" property="age" />
		<result column="birth" property="birth" />
		<result column="PHONE" property="phone" />
		<result column="gender" property="gender" />
		<collection property="classDTOs" javaType="List"
			ofType="ClassDTO">
			<id column="classnum" property="classNum" />
			<result column="classname" property="className" />
		</collection>
	</resultMap>

	<update id="setUpdate" parameterType="MemberDTO">
		update promembers set
		userName = #{userName}, pwd = #{pwd}, email = #{email},
		age = #{age},
		birth=#{birth}, phone = #{phone}, gender = #{gender}
		where userID =
		#{userID}
	</update>

	<delete id="setDelete" parameterType="MemberDTO">
		delete
		from promembers
		where
		userID = #{userID}
	</delete>

	<!-- ID Check -->
	<!-- <select id="idCheck" parameterType="MemberDTO" resultMap="check"> select 
		userID from promembers where userID = #{userID} </select> <resultMap type="MemberDTO" 
		id="check"> <id column="userid" property="userID" /> </resultMap> -->
	<select id="checkId" parameterType="MemberDTO" resultType="int">
		select
		count(*) from
		promembers where userid = #{userID}
	</select>

</mapper>
